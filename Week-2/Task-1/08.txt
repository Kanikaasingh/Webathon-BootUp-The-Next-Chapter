Q8). How many loops in javascript and how do they work
// JavaScript has several types of loops:

// 1. "for" loop - Used when the number of iterations is known
console.log("For loop:");
for (let i = 1; i <= 5; i++) {
    console.log(i); // Prints numbers from 1 to 5
}

/* 
How it works:
- Initializes i to 1
- Runs the loop while i <= 5
- Increments i in each iteration
*/

// 2. "while" loop - Executes as long as the condition is true
console.log("While loop:");
let j = 1;
while (j <= 5) {
    console.log(j); // Prints numbers from 1 to 5
    j++; // Increments j
}

/* 
How it works:
- Checks the condition before each iteration
- If true, executes the block
- Continues until the condition becomes false
*/

// 3. "do...while" loop - Executes at least once, then repeats while the condition is true
console.log("Do-While loop:");
let k = 1;
do {
    console.log(k); // Prints numbers from 1 to 5
    k++; // Increments k
} while (k <= 5);

/* 
How it works:
- Executes the block at least once, even if the condition is false
- Then checks the condition before repeating
*/

// 4. "for...in" loop - Used to iterate over object properties
console.log("For-In loop:");
const person = { name: "Kanak", age: 19, city: "Agra" };
for (let key in person) {
    console.log(key + ": " + person[key]); // Prints each property and its value
}

/* 
How it works:
- Iterates(repeats) over the keys of an object
- Allows access to each property value
*/

// 5. "for...of" loop - Used to iterate over iterable objects like arrays
console.log("For-Of loop:");
const numbers = [10, 20, 30, 40, 50];
for (let num of numbers) {
    console.log(num); // Prints each element in the array
}

/* 
How it works:
- Iterates directly over values in an iterable (like an array)
- Doesn't work with plain objects
*/